<Activity mc:Ignorable="sap sap2010" x:Class="CopyWorksheetToWorkbook" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib" xmlns:this="clr-namespace:" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_ExcelPath" Type="InArgument(x:String)" />
    <x:Property Name="in_Sheet" Type="InArgument(x:String)" />
    <x:Property Name="in_Destination" Type="InArgument(x:String)" />
  </x:Members>
  <this:CopyWorksheetToWorkbook.in_ExcelPath>
    <InArgument x:TypeArguments="x:String">
      <Literal x:TypeArguments="x:String" Value="" />
    </InArgument>
  </this:CopyWorksheetToWorkbook.in_ExcelPath>
  <this:CopyWorksheetToWorkbook.in_Sheet>
    <InArgument x:TypeArguments="x:String">
      <Literal x:TypeArguments="x:String" Value="" />
    </InArgument>
  </this:CopyWorksheetToWorkbook.in_Sheet>
  <this:CopyWorksheetToWorkbook.in_Destination>
    <InArgument x:TypeArguments="x:String">
      <Literal x:TypeArguments="x:String" Value="" />
    </InArgument>
  </this:CopyWorksheetToWorkbook.in_Destination>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>396,316</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>CopyWorksheetToWorkbook_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Excel</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="CopyWorksheetToWorkbook" sap:VirtualizedContainerService.HintSize="376,256" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:InvokeCode ContinueOnError="{x:Null}" Code="Dim oApp As Microsoft.Office.Interop.Excel.Application = New Microsoft.Office.Interop.Excel.Application&#xD;&#xA;&#xD;&#xA;Dim oWB As Microsoft.Office.Interop.Excel.Workbook&#xD;&#xA;&#xD;&#xA;Dim oWBDestination As Microsoft.Office.Interop.Excel.Workbook&#xD;&#xA;&#xD;&#xA;Dim oSheet As Microsoft.Office.Interop.Excel.Worksheet&#xD;&#xA;Dim oSheet2 As Microsoft.Office.Interop.Excel.Worksheet&#xD;&#xA;&#xD;&#xA;Dim oRange As Microsoft.Office.Interop.Excel.Range&#xD;&#xA;&#xD;&#xA;Try&#xD;&#xA;&#x9;oApp.DisplayAlerts = False&#xD;&#xA;&#x9;oWB = oApp.Workbooks.Open(vExcelPath)&#xD;&#xA;&#x9;oSheet = DirectCast(oWB.Sheets(vSheets), Microsoft.Office.Interop.Excel.Worksheet)&#xD;&#xA;&#x9;oSheet.Copy()&#xD;&#xA;&#x9;'For Each series As String In vSeries&#xD;&#xA;&#x9;oSheet2 = DirectCast(oApp.ActiveSheet, Microsoft.Office.Interop.Excel.Worksheet)&#xD;&#xA;&#x9;oWBDestination = DirectCast(oSheet2.Parent, Microsoft.Office.Interop.Excel.Workbook)&#xD;&#xA;&#x9;oSheet2.UsedRange.Cells.Copy&#xD;&#xA;&#x9;oSheet2.UsedRange.Cells.PasteSpecial(Microsoft.Office.Interop.Excel.XlPasteType.xlPasteValues)&#xD;&#xA;&#x9;If File.Exists(vDestination) Then&#xD;&#xA;&#x9;&#x9;File.Delete(vDestination)&#xD;&#xA;&#x9;End If&#xD;&#xA;&#x9;oWB.Save&#xD;&#xA;&#x9;If Path.GetExtension(vDestination).ToUpper.Trim.Contains(&quot;XLSM&quot;) Then&#xD;&#xA;&#x9;&#x9;oWBDestination.SaveAs(vDestination, Microsoft.Office.Interop.Excel.XlFileFormat.xlOpenXMLWorkbookMacroEnabled)&#xD;&#xA;&#x9;End If&#xD;&#xA;&#x9;oWBDestination.SaveAs(vDestination)&#xD;&#xA;&#x9;'&#x9;oRange = oSheet.Range(series)&#xD;&#xA;&#x9;'&#x9;oRange.MergeCells = True&#xD;&#xA;&#x9;'Next&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;&#xD;&#xA;Catch e As Exception&#xD;&#xA;&#x9;Console.WriteLine(e.Message)&#xD;&#xA;&#x9;Throw New Exception(e.Message)&#x9;&#xD;&#xA;Finally&#xD;&#xA;&#x9;System.Runtime.InteropServices.Marshal.ReleaseComObject(oWB)&#xD;&#xA;&#x9;System.Runtime.InteropServices.Marshal.ReleaseComObject(oSheet)&#xD;&#xA;&#x9;oWBDestination.Close&#xD;&#xA;&#x9;'oWB.Close&#xD;&#xA;&#x9;oApp.DisplayAlerts = True&#xD;&#xA;&#x9;oApp.Quit&#xD;&#xA;End Try&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;" DisplayName="Invoke Code - CopyWorksheetToWorkbook" sap:VirtualizedContainerService.HintSize="334,164" sap2010:WorkflowViewState.IdRef="InvokeCode_1">
      <ui:InvokeCode.Arguments>
        <InArgument x:TypeArguments="x:String" x:Key="vExcelPath">[in_ExcelPath]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="vSheets">[in_Sheet]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="vDestination">[in_Destination]</InArgument>
      </ui:InvokeCode.Arguments>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:InvokeCode>
  </Sequence>
</Activity>